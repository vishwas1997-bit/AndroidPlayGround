plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        configurations.all {
            resolutionStrategy { force 'androidx.core:core-ktx:1.6.0' }
        }
        applicationId "com.example.kotlindemo"
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                      "$projectDir/schemas".toString()]
            }
        }
    }

    sourceSets {
        // Adds exported schema location as test app assets.
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding{
        enabled true
    }
    namespace 'com.example.kotlindemo'
}

dependencies {

    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appcompatVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationFragmentKtx"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationUiKtx"

    //Retrofit
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.convertGsonVersion"
    implementation("com.squareup.okhttp3:logging-interceptor:$rootProject.loggingInterceptorVersion")

    // coroutine
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion")

    // rxJava
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rootProject.rxjava2Adapter"

    // room
    implementation("androidx.room:room-runtime:$rootProject.roomVersion")
    kapt("androidx.room:room-compiler:$rootProject.roomVersion")
    implementation "androidx.room:room-rxjava2:$rootProject.roomVersion"
    implementation("androidx.room:room-ktx:$rootProject.roomVersion")
    testImplementation "androidx.room:room-testing:$rootProject.roomVersion"

    // dependency injection
    implementation "com.google.dagger:dagger:$rootProject.dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger2_version"

    // work manager
    implementation("androidx.work:work-runtime-ktx:$rootProject.work_version")

    //floating action button
    implementation "com.github.clans:fab:$rootProject.float_action_button_third_party"

    // UI Testing
    testImplementation 'junit:junit:'
    androidTestImplementation "androidx.test.ext:junit:$rootProject.junitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoCoreVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$rootProject.espressoCoreVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2_version"
}