// Generated by Dagger (https://google.github.io/dagger).
package com.example.kotlindemo.notes_app.di.module;

import com.example.kotlindemo.notes_app.NoteViewModel;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class FragmentModule_ProvideNoteViewModelFactory implements Factory<NoteViewModel> {
  private final FragmentModule module;

  public FragmentModule_ProvideNoteViewModelFactory(FragmentModule module) {
    this.module = module;
  }

  @Override
  public NoteViewModel get() {
    return provideInstance(module);
  }

  public static NoteViewModel provideInstance(FragmentModule module) {
    return proxyProvideNoteViewModel(module);
  }

  public static FragmentModule_ProvideNoteViewModelFactory create(FragmentModule module) {
    return new FragmentModule_ProvideNoteViewModelFactory(module);
  }

  public static NoteViewModel proxyProvideNoteViewModel(FragmentModule instance) {
    return Preconditions.checkNotNull(
        instance.provideNoteViewModel(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
