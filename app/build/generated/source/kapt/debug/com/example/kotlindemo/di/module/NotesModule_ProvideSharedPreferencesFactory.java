// Generated by Dagger (https://google.github.io/dagger).
package com.example.kotlindemo.di.module;

import android.content.Context;
import android.content.SharedPreferences;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class NotesModule_ProvideSharedPreferencesFactory
    implements Factory<SharedPreferences> {
  private final NotesModule module;

  private final Provider<Context> contextProvider;

  public NotesModule_ProvideSharedPreferencesFactory(
      NotesModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public SharedPreferences get() {
    return provideInstance(module, contextProvider);
  }

  public static SharedPreferences provideInstance(
      NotesModule module, Provider<Context> contextProvider) {
    return proxyProvideSharedPreferences(module, contextProvider.get());
  }

  public static NotesModule_ProvideSharedPreferencesFactory create(
      NotesModule module, Provider<Context> contextProvider) {
    return new NotesModule_ProvideSharedPreferencesFactory(module, contextProvider);
  }

  public static SharedPreferences proxyProvideSharedPreferences(
      NotesModule instance, Context context) {
    return Preconditions.checkNotNull(
        instance.provideSharedPreferences(context),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
