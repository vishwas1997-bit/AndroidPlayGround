// Generated by Dagger (https://dagger.dev).
package com.example.kotlindemo.notes_app.data;

import com.example.kotlindemo.notes_app.data.db.DbHelper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppDataManger_Factory implements Factory<AppDataManger> {
  private final Provider<DbHelper> mDbHelperProvider;

  public AppDataManger_Factory(Provider<DbHelper> mDbHelperProvider) {
    this.mDbHelperProvider = mDbHelperProvider;
  }

  @Override
  public AppDataManger get() {
    return newInstance(mDbHelperProvider.get());
  }

  public static AppDataManger_Factory create(Provider<DbHelper> mDbHelperProvider) {
    return new AppDataManger_Factory(mDbHelperProvider);
  }

  public static AppDataManger newInstance(DbHelper mDbHelper) {
    return new AppDataManger(mDbHelper);
  }
}
