// Generated by Dagger (https://google.github.io/dagger).
package com.example.kotlindemo.di.module;

import com.example.kotlindemo.di.local.NoteDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class NotesModule_GetNotesDbFactory implements Factory<NoteDatabase> {
  private final NotesModule module;

  public NotesModule_GetNotesDbFactory(NotesModule module) {
    this.module = module;
  }

  @Override
  public NoteDatabase get() {
    return provideInstance(module);
  }

  public static NoteDatabase provideInstance(NotesModule module) {
    return proxyGetNotesDb(module);
  }

  public static NotesModule_GetNotesDbFactory create(NotesModule module) {
    return new NotesModule_GetNotesDbFactory(module);
  }

  public static NoteDatabase proxyGetNotesDb(NotesModule instance) {
    return Preconditions.checkNotNull(
        instance.getNotesDb(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
